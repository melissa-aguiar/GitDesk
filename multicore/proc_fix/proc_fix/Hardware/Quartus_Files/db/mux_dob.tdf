--lpm_mux CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_SIZE=2 LPM_WIDTH=20 LPM_WIDTHS=1 data result sel
--VERSION_BEGIN 19.1 cbx_lpm_mux 2019:09:22:11:00:28:SJ cbx_mgl 2019:09:22:11:02:15:SJ  VERSION_END


-- Copyright (C) 2019  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 20 
SUBDESIGN mux_dob
( 
	data[39..0]	:	input;
	result[19..0]	:	output;
	sel[0..0]	:	input;
) 
VARIABLE 
	result_node[19..0]	: WIRE;
	sel_node[0..0]	: WIRE;
	w_data180w[1..0]	: WIRE;
	w_data194w[1..0]	: WIRE;
	w_data206w[1..0]	: WIRE;
	w_data218w[1..0]	: WIRE;
	w_data230w[1..0]	: WIRE;
	w_data242w[1..0]	: WIRE;
	w_data254w[1..0]	: WIRE;
	w_data266w[1..0]	: WIRE;
	w_data278w[1..0]	: WIRE;
	w_data290w[1..0]	: WIRE;
	w_data302w[1..0]	: WIRE;
	w_data314w[1..0]	: WIRE;
	w_data326w[1..0]	: WIRE;
	w_data338w[1..0]	: WIRE;
	w_data350w[1..0]	: WIRE;
	w_data362w[1..0]	: WIRE;
	w_data374w[1..0]	: WIRE;
	w_data386w[1..0]	: WIRE;
	w_data398w[1..0]	: WIRE;
	w_data410w[1..0]	: WIRE;

BEGIN 
	result[] = result_node[];
	result_node[] = ( ((sel_node[] & w_data410w[1..1]) # ((! sel_node[]) & w_data410w[0..0])), ((sel_node[] & w_data398w[1..1]) # ((! sel_node[]) & w_data398w[0..0])), ((sel_node[] & w_data386w[1..1]) # ((! sel_node[]) & w_data386w[0..0])), ((sel_node[] & w_data374w[1..1]) # ((! sel_node[]) & w_data374w[0..0])), ((sel_node[] & w_data362w[1..1]) # ((! sel_node[]) & w_data362w[0..0])), ((sel_node[] & w_data350w[1..1]) # ((! sel_node[]) & w_data350w[0..0])), ((sel_node[] & w_data338w[1..1]) # ((! sel_node[]) & w_data338w[0..0])), ((sel_node[] & w_data326w[1..1]) # ((! sel_node[]) & w_data326w[0..0])), ((sel_node[] & w_data314w[1..1]) # ((! sel_node[]) & w_data314w[0..0])), ((sel_node[] & w_data302w[1..1]) # ((! sel_node[]) & w_data302w[0..0])), ((sel_node[] & w_data290w[1..1]) # ((! sel_node[]) & w_data290w[0..0])), ((sel_node[] & w_data278w[1..1]) # ((! sel_node[]) & w_data278w[0..0])), ((sel_node[] & w_data266w[1..1]) # ((! sel_node[]) & w_data266w[0..0])), ((sel_node[] & w_data254w[1..1]) # ((! sel_node[]) & w_data254w[0..0])), ((sel_node[] & w_data242w[1..1]) # ((! sel_node[]) & w_data242w[0..0])), ((sel_node[] & w_data230w[1..1]) # ((! sel_node[]) & w_data230w[0..0])), ((sel_node[] & w_data218w[1..1]) # ((! sel_node[]) & w_data218w[0..0])), ((sel_node[] & w_data206w[1..1]) # ((! sel_node[]) & w_data206w[0..0])), ((sel_node[] & w_data194w[1..1]) # ((! sel_node[]) & w_data194w[0..0])), ((sel_node[] & w_data180w[1..1]) # ((! sel_node[]) & w_data180w[0..0])));
	sel_node[] = ( sel[0..0]);
	w_data180w[] = ( data[20..20], data[0..0]);
	w_data194w[] = ( data[21..21], data[1..1]);
	w_data206w[] = ( data[22..22], data[2..2]);
	w_data218w[] = ( data[23..23], data[3..3]);
	w_data230w[] = ( data[24..24], data[4..4]);
	w_data242w[] = ( data[25..25], data[5..5]);
	w_data254w[] = ( data[26..26], data[6..6]);
	w_data266w[] = ( data[27..27], data[7..7]);
	w_data278w[] = ( data[28..28], data[8..8]);
	w_data290w[] = ( data[29..29], data[9..9]);
	w_data302w[] = ( data[30..30], data[10..10]);
	w_data314w[] = ( data[31..31], data[11..11]);
	w_data326w[] = ( data[32..32], data[12..12]);
	w_data338w[] = ( data[33..33], data[13..13]);
	w_data350w[] = ( data[34..34], data[14..14]);
	w_data362w[] = ( data[35..35], data[15..15]);
	w_data374w[] = ( data[36..36], data[16..16]);
	w_data386w[] = ( data[37..37], data[17..17]);
	w_data398w[] = ( data[38..38], data[18..18]);
	w_data410w[] = ( data[39..39], data[19..19]);
END;
--VALID FILE
